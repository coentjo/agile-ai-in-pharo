---
title: "Practical Applications of the Perceptron"
---

## Building Logic Gates with Perceptrons

Let's look at an example of how Perceptrons can be used? 

### Creating an AND Gate

You may know the concept of an AND gate: given two inputs (both can be `0` or `1`) the AND gate will output a `1` if both inputs are `1`, and `0` in all other cases. 

Consider a Perceptron with the following configuration:
- Weights: `w1 = 1`, `w2 = 1` 
- Bias: `-1.5`

Here's the truth table for an AND gate:

| Input 1 | Input 2 | Output |
|---------|---------|---------|
| 0       | 0       | 0       |
| 0       | 1       | 0       |
| 1       | 0       | 0       |
| 1       | 1       | 1       |


One example: when inputs are `1` and `1` the weighted sum is ($1 * 1 + 1 * 1$), adding the bias gives: `0.5`, which is greater than `0`, so the activation function will give `1`. 

## Beyond AND Gates

By changing the bias to `-0.5` this Perceptron turns into an OR gate (which returns `1` if at least one of the inputs is `1`)

Changing the values can give you a NOR gate and a NOT gate, which would be nice to figure out yourself (or use your prefered search engine). 

