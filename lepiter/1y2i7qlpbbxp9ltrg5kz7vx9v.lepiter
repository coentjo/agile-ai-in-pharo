{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:50:28.881933+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:50:28.881933+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "sE3m4pTdDQCyNk5UCW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:15.780495+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:49:36.020541+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gEjQ05TdDQCw+uDQCW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now what can we use that for? Well, look at the code below: it creates a Perceptron with \nweights    `w1 := 1`, `w2 := 1`,   put together as an array: `#( 1 1 )` \nand `bias := -1.5`."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:19.866315+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:49:29.025614+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "a58O1JTdDQCxDul1CW3gIA=="
				},
				"code" : "\"Perceptron with weights 1, 1 with bias -1.5\" \rperceptron := Neuron new\r\t\tstep;\r\t\tweights: #(1 1);\r\t\tbias: -1.5."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:49:21.6035+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:49:22.895717+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "b7fj3pTdDQCx+rn8CW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can look at the tabs to see multiple ways of looking at the Perceptron. Not all tabs will mean something to you at this moment. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:15.921027+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:47.096012+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "9G7S05TdDQCw/7GECW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Next step is to see what the `output` will be at given `inputs`: "
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:21.637976+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:36.192344+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Zqop1JTdDQCxEw57CW3gIA=="
				},
				"code" : "perceptron fire: #(1 1)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:08.104233+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:31.954663+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "WDOC2pTdDQCxj1dmCW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can change the values in the array. Try all of these: #(0 0), #(0 1), #(1 0), #(1 1) and you will find that this perceptron has **ONLY output 1 if both inputs are 1** . That means it behaves as an **AND** logical gate. Looking at the weights and bias, do you understand that?"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:25.00345+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:25.825381+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "1RCE25TdDQCxr37zCW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "If you look at the weights and bias that seems to be right: rewrite the formula for `z` for 2 inputs, filling in the known numbers, gives: "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:20.122468+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:20.443619+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "75U525TdDQCxodrACW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "`z := 1*x1 + 1*x2 - 1.5`"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:08.961415+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:10.617107+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "nkeP2pTdDQCxk2ffCW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "If you calculate the `z` for all 4 input combinations you see that if either `x1`  or  `x2`  (or both) equals  `0`  than the sum of them will be less then `1.5`, which means the perceptron will output `0`. Only when  `x1` and `x2`  both have value `1`  will the value of `z` be greater than '0', so only then will the perceptron output `1`."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:16.169416+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:48:00.544779+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "JTfW05TdDQCxBBJYCW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Well, programmers like to test their code automatically. Here you see a method that checks  all these 4 cases: first a perceptron is created, then 'assert:equals:' is called 4 times with the 4 inputs and corresponding outputs. Let's look at the first assert: \r\n`self assert: (perceptron feed: #(0 0)) equals: 0.`\r\nIn this line the perceptron is fed two zero's: if the result is zero nothing special happens (inspecting  shows a green thingy after the method name and shows a 'FiredNeuronShot'), but if something else comes out the program will warn you: the inspected result is 'nil' and after the method name you see an orange thingy . You can change the values to try that if you want. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:16.312829+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:47:45.050134+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "nGnY05TdDQCxCYcxCW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "{{gtExample:WorkshopAIPerceptronGT>>testANDGate}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:56.748189+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:58.987916+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "l2RB1pTdDQCxSp0ZCW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "First a variable `p` is created (by putting it between vertical bars), then it gets assigned a perceptron that acts as an AND gate, by calling the method we saw before. Then a message `'assert:equals:'` is sent (to self) to check that if you `FEED` the perceptron the input `0` and `0` , it will output `0` (that's the first test, figure out whether you agree to all 4 tests). "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:47:00.147954+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:47:06.226168+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "W0d11pTdDQCxXAzjCW3gIA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Just like it is possible to configure a perceptron as an AND gate it is also possible to configure one as an OR gate (output is 1 if at least one of the inputs is 1), a NOR gate (only 1 if the inputs are 0) or a NOT gate (input 0 gives output 1 and input 1 gives output 0). Which of the following is which, and can you complete the code for the missing one? "
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:22.254974+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:43.213787+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "mhQz1JTdDQCxGPkmCW3gIA=="
				},
				"code" : "perceptron := Neuron new\r\t\tstep;\r\t\tweights: #(-1 -1);\r\t\tbias: 0.5 ."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:23.434564+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:34.305146+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "5BRF1JTdDQCxHTwuCW3gIA=="
				},
				"code" : "perceptron := Neuron new\r\t\tstep;\r\t\tweights: #( -1 );\r\t\tbias: 0.5 ."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:24.540837+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T10:46:29.551486+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "nfRV1JTdDQCxIts8CW3gIA=="
				},
				"code" : "perceptron := ??? \"can you complete this code for the missing third?\""
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-09-03T10:45:47.387451+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-09-03T10:50:00.628653+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Applying the Perceptron: AND/OR"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "330d1fd2-94dd-0d00-b0e0-8e81096de020"
	}
}