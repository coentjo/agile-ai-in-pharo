{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-28T17:46:41.867274+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T21:44:05.861055+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "6r6lTM2LDQCSBxVcBrlshQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "In the next example a Perceptron is introduced. A Perceptron is a way of creating an artificial 'simulation' of the way a human brain works. In 1943 Warren S. McCulloch and Walter Pitts expressed the idea in an article 'A Logical Calculus of the Ideas Immanent in Nervous Activity'. "
						},
						{
							"__type" : "pictureSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T22:01:32.652091+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T22:02:05.547164+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "YhKwJfmLDQCsDc4ECRNLqg=="
							},
							"url" : "attachments/a2xz7edye9ovbir79lq915yby/TypicalNeuron.png"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T21:56:53.764005+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T22:06:15.971429+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "aBkBFfmLDQCsC6MeCRNLqg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "The idea behind a Perceptron is that it has a number of `inputs`, each input having its own `weight`, furthermore it has a `bias`. Every input channel accepts a numerical value, and the weight determines the importance of that input. "
						},
						{
							"__type" : "pictureSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T22:07:34.337998+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T22:10:05.939655+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "9fU+O/mLDQCsDxrCCRNLqg=="
							},
							"url" : "attachments/a2xz7efdiumd2tb2rell119o8/Perceptron01.png"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T22:09:14.38608+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T22:13:33.365911+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "0oe5PvmLDQCsEdBgCRNLqg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "This example has 3 inputs: the `feeds` into the inputs are called `x1`, `x2` and `x3`. The corresponding weights are called `w1`, `w2` and `w3`.  To calculate the output of the Perceptron first the `'weighted sum'` is calculated, then the bias is added to that sum: "
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T22:12:02.436432+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T22:15:13.375742+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "o/IlS/mLDQCsEwKCCRNLqg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "`z := w1*x1 + w2*x2 + w3*x3 + bias`"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:01:06.967+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:20:08.587+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "+DdsBwujDQCExQ97DbaRTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Well, this  is an example with 3 inputs. You can look at the real (and more generic) code that is begin executed in this system: "
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:03:04.888+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:16:15.019+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "CD4nCQujDQCExn2PDbaRTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "{{gtMethod:Neuron>>feed:|expanded=true}}"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:30:42.106+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:30:42.106+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "8GaKcQujDQCE1dFVDbaRTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "As explained in the **Onboarding** chapter, this shows the method 'feed:' with parameter 'inputs' (an array), in class Neuron, which is in package NeuralNetwork. The value in the array 'inputs' is taken with corresponding elements of 'weights' (which is stored in that Neuron), the elements are pair-wise multiplied, of the results the 'sum' is taken, and then the bias is added.  The result of this is assigned to local variable 'z', which was explicitly declared in the line '**| z |**'.  The activationFunction evaluates the resulting value in 'z'. "
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:18:23.942+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:31:16.989+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "0D5uRAujDQCE1FVDDbaRTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "For a Neuron the so-called evaluation function is a 'step' function: If `z>0` the output of the Perceptron will be `1`, otherwise `0`, which you can see coded in: "
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:31:20.827+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:31:50.458+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "sBuvcwujDQCE1kYwDbaRTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "{{gtMethod:StepAF>>eval:|expanded=true}}"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:33:55.969+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:34:41.594+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "sI9gdgujDQCE1wi1DbaRTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "The '**^**' means that the method will 'return' that value. "
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T14:35:24.520191+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:18:17.42516+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "jTgO6vKLDQCY4TLnC9yptA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## The idea behind a Perceptron"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T23:06:21.07415+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T23:06:26.229676+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "potXDfqLDQCDbw28DU1nhA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Our first Perceptron"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:13:40.702677+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-22T17:14:50.473925+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "hM3OQ/mLDQCsEnb1CRNLqg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now what can we use that for? Well, look at the code below: it creates a Perceptron with \nweights    `w1 := 1`, `w2 := 1`,   put together as an array: `#( 1 1 )` \nand `bias := -1.5`."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-22T17:04:57.56309+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-04-28T20:40:20.776176+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "FLRDoo+SDQCxo8jyCPL5Jw=="
				},
				"code" : "\"Perceptron simulating an AND Gate\"\r\t\"Weights 1, 1 with bias -1.5 makes the Perceptron an AND gate\"\r\t| perceptron |\r\tperceptron := Neuron new step. \r\tperceptron weights: #( 1 1  1) . \r\tperceptron bias: -1.5 .\r\t^ perceptron"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-13T23:05:08.170628+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-20T12:06:00.792+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "c8ZRgRSNDQClR0h/CJD9ng=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can look at the tabs to see multiple ways of looking at the Perceptron. Not all tabs will mean something to you at this moment. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-13T23:01:45.525801+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-13T23:02:17.893656+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iiy/dBSNDQClQSQ4CJD9ng=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Next step is to see what the `output` will be at given `inputs`: "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-13T23:02:31.742556+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-01T13:14:11.081507+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "5xj7dxSNDQClQuzDCJD9ng=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "{{gtExample:WorkshopAIPerceptronGT>>chapter01PerceptronAndGateWithInputs}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:28:18.71387+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:34:49.921048+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GbELhfmLDQCsKAvvCRNLqg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The method name suggests that this perceptron could simulate an AND gate. Well, a binary AND gate ONLY outputs `1` if both inputs are `1`, and `0` otherwise! If you look at the weights and bias that seems to be right: rewrite the formula for `z` for 2 inputs, filling in the known numbers, gives: "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:34:04.923493+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:38:55.730929+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "tw8GmvmLDQCsKZG5CRNLqg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "`z := 1*x1 + 1*x2 - 1.5`"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:37:10.951115+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:51:37.601974+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "RtwPpfmLDQCsKkDaCRNLqg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "If you calculate the `z` for all 4 input combinations you see that if either `x1`  or  `x2`  (or both) equals  `0`  than the sum of them will be less then `1.5`, which means the perceptron will output `0`. Only when  `x1` and `x2`  both have value `1`  will the value of `z` be greater than '0', so only then will the perceptron output `1`."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:51:46.404304+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-31T09:23:18.949828+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "jvoE2fmLDQCDaSfZDU1nhA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Well, programmers like to test automatically, so here you see a method that checks the one before, by first calling it and the"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:52:24.130701+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:52:38.505427+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "/da+1/mLDQCsNx8pCRNLqg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "${{gtExample:WorkshopAIPerceptronGT>>testANDGate}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:53:02.252044+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T23:00:00.881499+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "YcJu3fmLDQCDajFaDU1nhA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "First a variable `p` is created (by putting it between vertical bars), then it gets assigned a perceptron that acts as an AND gate, by calling the method we saw before. Then a message `'assert:equals:'` is sent (to self) to check that if you `FEED` the perceptron the input `0` and `0` , it will output `0` (that's the first test, figure out whether you agree to all 4 tests). "
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-10-17T14:00:44.900502+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-08-20T12:04:36.711+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Perceptron"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "3e704aea-ec8a-0d00-9620-f3f50015cbae"
	}
}