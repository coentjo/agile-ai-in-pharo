{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-28T17:46:41.867274+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T21:44:05.861055+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "6r6lTM2LDQCSBxVcBrlshQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "In the next example a Perceptron is introduced. A Perceptron is a way of creating an artificial 'simulation' of the way a human brain works. In 1943 Warren S. McCulloch and Walter Pitts expressed the idea in an article 'A Logical Calculus of the Ideas Immanent in Nervous Activity'. "
						},
						{
							"__type" : "pictureSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-10-30T22:01:32.652091+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-08-24T15:11:58.208199+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "YhKwJfmLDQCsDc4ECRNLqg=="
							},
							"url" : "attachments/a2xz7edye9ovbir79lq915yby/TypicalNeuron.png",
							"caption" : "",
							"previewHeight" : 300
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2021-10-30T21:56:53.764005+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2021-10-30T22:06:15.971429+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "aBkBFfmLDQCsC6MeCRNLqg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "The idea behind a Perceptron is that it has a number of `inputs`, each input having its own `weight`, furthermore it has a `bias`. Every input channel accepts a numerical value, and the weight determines the importance of that input. "
									},
									{
										"__type" : "pictureSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2021-10-30T22:07:34.337998+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T15:11:58.24376+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "9fU+O/mLDQCsDxrCCRNLqg=="
										},
										"url" : "attachments/a2xz7efdiumd2tb2rell119o8/Perceptron01.png",
										"caption" : "",
										"previewHeight" : 300
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2021-10-30T22:09:14.38608+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2021-10-30T22:13:33.365911+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "0oe5PvmLDQCsEdBgCRNLqg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "This example has 3 inputs: the `feeds` into the inputs are called `x1`, `x2` and `x3`. The corresponding weights are called `w1`, `w2` and `w3`.  To calculate the output of the Perceptron first the `'weighted sum'` is calculated, then the bias is added to that sum: "
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2021-10-30T22:12:02.436432+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2021-10-30T22:15:13.375742+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "o/IlS/mLDQCsEwKCCRNLqg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "`z := w1*x1 + w2*x2 + w3*x3 + bias`"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:42:14.922916+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:42:14.922916+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "6C2BotDcDQCu8z+jAvhvRg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "After that it is **`activated`** (or: **`the activation function`** is calculated), for which in this example we take the formula: "
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:40:00.998566+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:42:14.930538+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "6aKFmtDcDQCtgrACAvhvRg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "if value of z is above 0, output will be 1,\notherwise output will be 0"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:43:01.735874+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:43:09.399715+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "c/ieUNDcDQCXE7d0AvhvRg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "In code the 'z' can be calculated by: "
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:19:15.587461+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:42:35.236443+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "2S1KUNDcDQCXDzPWAvhvRg=="
										},
										"code" : "| x1 x2 x3 w1 w2 w3 bias |\r\"When a neuron is `fired` that means there are `input` values. \rThe input values are called x1 until x3 here:\"\rx1 := 0.35 .\rx2 := 1.2 .\rx3 := 0.54 .\r\"The weights w1 to w3 are properties of the neuron, as is the bias:\"\rw1 := 0.234 .\rw2 := 0.32 .\rw3 := 0.58 .\rbias := 5 .\rz := (w1 * x1) + (w2 * x2) + (w3 * x3) + bias. "
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:42:46.657599+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:43:36.737413+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "kWllpNDcDQCvFqUQAvhvRg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "after which the **`activation`** gives: "
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:42:39.269091+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:44:03.155255+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "nK30o9DcDQCvEmi/AvhvRg=="
										},
										"code" : "z > 0 \r\tifTrue: [1]\r\tifFalse: [0]"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:38:48.93429+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:45:39.663937+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "KQo6ltDcDQCrub1YAvhvRg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Well, that  was an example with 3 inputs. Maybe play around a bit with the input values (x1, x2, x3) to get output 0.:  (inspect the playgrounds again after changing the values)"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2022-08-20T12:01:06.967+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:48:31.472553+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "+DdsBwujDQCExQ97DbaRTA=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "Now we will take a look at some more generic code that is being executed in this system: \n(why is this more generic?)"
									},
									{
										"__type" : "pharoSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:18:11.77185+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-09-02T20:14:22.342086+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "JW98TNDcDQCWwIFXAvhvRg=="
										},
										"code" : "| inputs_x weights_w bias |\rinputs_x :=  #(0.35  1.2  0.54).\rweights_w := #(0.234 0.32 0.58).\rbias := 5.\rz := (inputs_x \r\t\twith: weights_w \r\t\tcollect: [ :x :w | x * w ]) \r\t\t\tsum \r\t\t\t\t+ bias"
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:53:03.014606+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:56:00.087352+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "9D4iydDcDQC3ptjNAvhvRg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "*Answer*: This is more generic because you can add a fourth (and fifth, and...) value to `inputs_x` and `weights_w`: the code will still work, as long as the number of input values is equal to the number of weights. "
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:17:25.13358+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:52:17.202141+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "2Mu0SdDcDQCU13EJAvhvRg=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "The code used by your machine (your laptop running GToolkit with this workshop) is like this: "
									},
									{
										"__type" : "textSnippet",
										"children" : {
											"__type" : "snippets",
											"items" : [ ]
										},
										"createEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"createTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2022-08-20T12:03:04.888+02:00"
											}
										},
										"editEmail" : {
											"__type" : "email",
											"emailString" : "<unknown>"
										},
										"editTime" : {
											"__type" : "time",
											"time" : {
												"__type" : "dateAndTime",
												"dateAndTimeString" : "2024-08-24T16:15:57.597705+02:00"
											}
										},
										"uid" : {
											"__type" : "uid",
											"uidString" : "CD4nCQujDQCExn2PDbaRTA=="
										},
										"paragraphStyle" : {
											"__type" : "textStyle"
										},
										"string" : "{{gtMethod:Neuron>>feed:|expanded=true}}"
									}
								]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-08-24T16:13:04.226285+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-08-24T16:14:57.439143+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "5aonOtDcDQCRdNYdAvhvRg=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "# Implementing this in a machine"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:30:42.106+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-08-24T16:11:37.939406+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "8GaKcQujDQCE1dFVDbaRTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "**Explanation**: As also explained in the Onboarding chapter, this shows the method 'feed:' with parameter 'inputs' (an array), in class Neuron, which is in package NeuralNetwork. The value in the array 'inputs' is taken with corresponding elements of 'weights' (which is stored in that Neuron), the elements are pair-wise multiplied, of the results the 'sum' is taken, and then the bias is added.  The result of this is assigned to local variable 'z', which was explicitly declared in the line '**| z |**'.  The activationFunction evaluates the resulting value in 'z'. "
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:18:23.942+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-08-24T16:58:29.663798+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "0D5uRAujDQCE1FVDDbaRTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "For a Neuron the so-called activationFunction is a 'step' function: If `z>0` the output of the Perceptron will be `1`, otherwise `0`, which you can see coded in method 'eval:' in class 'StepAF': "
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:31:20.827+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:31:50.458+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "sBuvcwujDQCE1kYwDbaRTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "{{gtMethod:StepAF>>eval:|expanded=true}}"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-20T12:33:55.969+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-08-21T16:56:28.713+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "sI9gdgujDQCE1wi1DbaRTA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "The '**^**' means that the method will 'return' that value. "
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T14:35:24.520191+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-08-24T16:13:33.258873+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "jTgO6vKLDQCY4TLnC9yptA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## The idea behind a Perceptron comes from a neuron in a brain"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T23:06:21.07415+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T11:25:16.873+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "potXDfqLDQCDbw28DU1nhA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Our first Perceptron: A logical AND gate"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:13:40.702677+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-22T17:14:50.473925+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "hM3OQ/mLDQCsEnb1CRNLqg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now what can we use that for? Well, look at the code below: it creates a Perceptron with \nweights    `w1 := 1`, `w2 := 1`,   put together as an array: `#( 1 1 )` \nand `bias := -1.5`."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-01-22T17:04:57.56309+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T09:46:36.102+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "FLRDoo+SDQCxo8jyCPL5Jw=="
				},
				"code" : "\"Perceptron with weights 1, 1 with bias -1.5\" \rperceptron := Neuron new\r\t\tstep;\r\t\tweights: #(1 1);\r\t\tbias: -1.5."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-13T23:05:08.170628+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-20T12:06:00.792+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "c8ZRgRSNDQClR0h/CJD9ng=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can look at the tabs to see multiple ways of looking at the Perceptron. Not all tabs will mean something to you at this moment. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-13T23:01:45.525801+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-13T23:02:17.893656+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iiy/dBSNDQClQSQ4CJD9ng=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Next step is to see what the `output` will be at given `inputs`: "
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T09:44:45.853+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T09:44:56.578+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "SNnIWzGjDQCyCdWVA4z6Kw=="
				},
				"code" : "perceptron fire: #(1 1)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T09:53:44.299+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T09:53:44.299+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "+OHgezGjDQCyJ9qAA4z6Kw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can change the values in the array. Try all of these: #(0 0), #(0 1), #(1 0), #(1 1) and you will find that this perceptron has **ONLY output 1 if both inputs are 1** . That means it behaves as an **AND** logical gate. Looking at the weights and bias, do you understand that?"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:28:18.71387+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T09:53:44.315+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GbELhfmLDQCsKAvvCRNLqg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "If you look at the weights and bias that seems to be right: rewrite the formula for `z` for 2 inputs, filling in the known numbers, gives: "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:34:04.923493+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:38:55.730929+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "tw8GmvmLDQCsKZG5CRNLqg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "`z := 1*x1 + 1*x2 - 1.5`"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:37:10.951115+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:51:37.601974+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "RtwPpfmLDQCsKkDaCRNLqg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "If you calculate the `z` for all 4 input combinations you see that if either `x1`  or  `x2`  (or both) equals  `0`  than the sum of them will be less then `1.5`, which means the perceptron will output `0`. Only when  `x1` and `x2`  both have value `1`  will the value of `z` be greater than '0', so only then will the perceptron output `1`."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:51:46.404304+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T10:22:38.876+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "jvoE2fmLDQCDaSfZDU1nhA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Well, programmers like to test their code automatically. Here you see a method that checks  all these 4 cases: first a perceptron is created, then 'assert:equals:' is called 4 times with the 4 inputs and corresponding outputs. Let's look at the first assert: \r\n`self assert: (perceptron feed: #(0 0)) equals: 0.`\r\nIn this line the perceptron is fed two zero's: if the result is zero nothing special happens (inspecting  shows a green thingy after the method name and shows a 'FiredNeuronShot'), but if something else comes out the program will warn you: the inspected result is 'nil' and after the method name you see an orange thingy . You can change the values to try that if you want. "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:52:24.130701+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-21T17:16:39.234+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "/da+1/mLDQCsNx8pCRNLqg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "{{gtExample:WorkshopAIPerceptronGT>>testANDGate}}"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T22:53:02.252044+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-10-30T23:00:00.881499+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "YcJu3fmLDQCDajFaDU1nhA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "First a variable `p` is created (by putting it between vertical bars), then it gets assigned a perceptron that acts as an AND gate, by calling the method we saw before. Then a message `'assert:equals:'` is sent (to self) to check that if you `FEED` the perceptron the input `0` and `0` , it will output `0` (that's the first test, figure out whether you agree to all 4 tests). "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T11:14:25.32+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T11:21:11.778+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wOE9nDKjDQCyZqvoA4z6Kw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Just like it is possible to configure a perceptron as an AND gate it is also possible to configure one as an OR gate (output is 1 if at least one of the inputs is 1), a NOR gate (only 1 if the inputs are 0) or a NOT gate (input 0 gives output 1 and input 1 gives output 0). Which of the following is which, and can you complete the code for the missing one? "
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T11:19:31.837+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T11:22:19.749+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "SBSyrjKjDQCybD55A4z6Kw=="
				},
				"code" : "perceptron := Neuron new\r\t\tstep;\r\t\tweights: #(-1 -1);\r\t\tbias: 0.5 ."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T11:19:11.576+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T11:20:18.691+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wOt8rTKjDQCyasD8A4z6Kw=="
				},
				"code" : "perceptron := Neuron new\r\t\tstep;\r\t\tweights: #( -1 );\r\t\tbias: 0.5 ."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T11:19:50.037+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-08-22T11:23:23.032+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "CMrHrzKjDQCycHy8A4z6Kw=="
				},
				"code" : "perceptron := ??? \"can you complete this code for the missing third?\""
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T09:12:19.302273+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-09-03T09:12:19.302273+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "QOH4gzOjDQCPHZbWBY3QgA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : ""
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-10-17T14:00:44.900502+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-08-20T12:04:36.711+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Perceptron"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "3e704aea-ec8a-0d00-9620-f3f50015cbae"
	}
}